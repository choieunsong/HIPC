The code has a number of possibly performance issues:
* The inner loop is dominated by expensive trigonometric functions.
* There is an expensive modulo function.
* Accesses to mat and s are strided; SIMD will not work.

We can do some (or all) of the following:
* Swap the loop ordering (loop-interchange)
* Move the calculation of val our of the inner loop
* Move the trigonometric functions out of the inner loop
* Replace the modulo with a bit mask
* Replace the trigonometric functions (since "sin(x)^2 - cos(x)^2 = -cos(2x)" by the "double angle rule")
* Since val can only take 256 values, could precompute a table for the trig functions

Transformed code:

double mat[N][N];
double s[N][N];
int v[N];

double trig_table[256];
for (int i = 0; i < 256; i++) {
    trig_table[i] = -cos(2.0*i);
}

// fill v and s

for (int i = 0; i < N; i++) {
    for (int j = 0; j < N; j++) {
        mat[i][j] = s[i][j] * trig_table[v[i] & 255];
    }
}

